#!/bin/bash

set -euo pipefail

usage() {
    echo "decrypt.sh SECREY_KEY [SESSION_KEY PAYLOAD]"
    exit 1
}

decrypt() {
    set -euo pipefail

    declare -r SECREY_KEY=$1
    declare SESSION_KEY=$2
    declare -r PAYLOAD=$3

    if grep -Fiq 'linux' <<< $OSTYPE; then
        SESSION_KEY="$(echo -n $SESSION_KEY | base64 -d | openssl pkeyutl -decrypt -inkey $SECREY_KEY)"
    elif grep -Fiq 'darwin' <<< $OSTYPE; then
        SESSION_KEY="$(base64 -D -in $SESSION_KEY | openssl pkeyutl -decrypt -inkey $SECREY_KEY)"
    else
        echo 'OS not surported.'
        exit 1
    fi

    openssl enc -d -aes-128-cbc -base64 -md sha256 -pass pass:"$SESSION_KEY" -in $PAYLOAD
}

main() {
    set -euo pipefail

    declare -r SECREY_KEY=$1
    declare SESSION_KEY
    declare PAYLOAD

    [[ -f $SECREY_KEY ]] || usage

    if [[ $# -eq 1 ]]; then
        SESSION_KEY=$(mktemp)
        cat > "$SESSION_KEY"

        PAYLOAD=$(mktemp)
        cat > "$PAYLOAD"
    elif [[ $# -eq 3 ]]; then
        SESSION_KEY=$2
        PAYLOAD=$3

        [[ -f "$SESSION_KEY" ]] || usage
        [[ -f "$PAYLOAD" ]] || usage
    else
        usage
    fi

    decrypt $SECREY_KEY $SESSION_KEY $PAYLOAD
}

main "$@"
