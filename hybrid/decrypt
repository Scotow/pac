#!/bin/bash

set -euo pipefail

usage() {
    echo "decrypt SECREY_KEY [SESSION_KEY PAYLOAD]"
    exit 1
}

decrypt() {
    set -euo pipefail

    local SECREY_KEY=$1
    local SESSION_KEY=$2
    local PAYLOAD=$3

    if grep -Fiq 'linux' <<< $OSTYPE; then
        SESSION_KEY="$(base64 -d $SESSION_KEY | openssl pkeyutl -decrypt -inkey $SECREY_KEY)"
        sed -i 's/\\n/\n/g' "$PAYLOAD"
    elif grep -Fiq 'darwin' <<< $OSTYPE; then
        SESSION_KEY="$(base64 -D -in $SESSION_KEY | openssl pkeyutl -decrypt -inkey $SECREY_KEY)"
        sed -i '' 's/\\n/\n/g' "$PAYLOAD"
    else
        echo 'OS not surported.'
        exit 1
    fi

    openssl enc -d -aes-128-cbc -base64 -md sha256 -pass pass:"$SESSION_KEY" -in "$PAYLOAD"
}

main() {
    set -euo pipefail

    [[ "$#" -lt 1 ]] && usage;

    local SECREY_KEY=$1
    local SESSION_KEY
    local PAYLOAD

    [[ -f "$SECREY_KEY" && -r "$SECREY_KEY" ]] || usage

    if [[ "$#" -eq 1 ]]; then
        SESSION_KEY=$(mktemp)
        cat > "$SESSION_KEY"

        PAYLOAD=$(mktemp)
        cat > "$PAYLOAD"
    elif [[ "$#" -eq 3 ]]; then
        SESSION_KEY="$2"
        PAYLOAD="$3"

        [[ -f "$SESSION_KEY" && -r "$SESSION_KEY" ]] || usage
        [[ -f "$PAYLOAD" && -r "$PAYLOAD" ]] || usage
    else
        usage
    fi

    decrypt "$SECREY_KEY" "$SESSION_KEY" "$PAYLOAD"
}

main "$@"
