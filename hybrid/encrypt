#!/bin/bash

set -euo pipefail

declare RECIPIENT
declare COOKIE
declare RECIPIENT_PK

usage() {
    echo "encrypt.sh RECIPIENT [FILE...]"
    exit 1
}

setup_session() {
    set -euo pipefail

    declare -r LOGIN=$(mktemp)

    curl -siL -XPOST \
      http://pac.fil.cool/uglix/bin/login \
      -H 'Content-Type: application/json' \
      -d '{
    	"user": "guest",
        "password": "guest"
    }' > "$LOGIN"

    COOKIE=$(grep -Fi "Set-Cookie" "$LOGIN" | cut -d: -f2- | cut -d\  -f2- | rev | cut -c2- | rev)
}

fetch_pk() {
    set -euo pipefail

    RECIPIENT_PK=$(mktemp)

    curl -sL \
      "http://pac.fil.cool/uglix/bin/key-management/$RECIPIENT/pk" \
      -H "Cookie: $COOKIE" \
      -o "$RECIPIENT_PK"

    head -n1 "$RECIPIENT_PK" | grep -Fiq "BEGIN PUBLIC KEY"
}

encrypt() {
    set -euo pipefail

    declare file;

    if [ $1 = "-" ]
    then
        file=$(mktemp)
        cat > "$file"
    else
        if [[ -f "$file" -a -r "$file" ]]
        then
            file=$1
        else
            echo "Cannot upload '$1'. Skipping."
            return
        fi
    fi

    # Generate random key.
    declare -r KEY=$(cat /dev/urandom | env LC_CTYPE=C tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n1)
    # Encrypt key with recipient's public key.
    declare -r SESSION_KEY=$(echo -n $KEY | openssl pkeyutl -encrypt -pubin -inkey $RECIPIENT_PK | base64)
    # Encrypt the message with the session key.
    declare -r PAYLOAD=$(openssl enc -aes-128-cbc -md sha256 -pass pass:"$KEY" -in $file | base64)

    echo "{\"session_key\": \"$SESSION_KEY\",\"payload\": \"$PAYLOAD\"}"
}

main() {
    set -euo pipefail

    [[ $# -lt 1 ]] && usage

    RECIPIENT=$1 && shift

    setup_session
    fetch_pk

    if [[ $# -eq 0 ]]
    then
        encrypt -
    else
        while [[ $# -ne 0 ]]
        do
            encrypt $1
            shift
        done
    fi
}

main "$@"
